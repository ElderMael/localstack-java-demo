/*
 * This Java source file was generated by the Gradle 'init' task.
 */

package io.eldermael.jvmmx.localstack.demo;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import com.amazonaws.services.lambda.runtime.events.SQSEvent;
import lombok.extern.slf4j.Slf4j;
import software.amazon.awssdk.auth.credentials.AwsCredentials;
import software.amazon.awssdk.auth.credentials.StaticCredentialsProvider;
import software.amazon.awssdk.regions.Region;
import software.amazon.awssdk.services.sqs.SqsClient;
import software.amazon.awssdk.services.sqs.model.SendMessageRequest;

import java.net.URI;

@Slf4j
public class Handler implements RequestHandler<SQSEvent, String> {

  private final String queueUrl;
  private final SqsClient sqsClient;

  public Handler(String queueUrl) {
    this.queueUrl = queueUrl;

    this.sqsClient = SqsClient.builder()
        .endpointOverride(URI.create("http://localhost:4566"))
        .region(Region.US_EAST_1)
        .credentialsProvider(StaticCredentialsProvider.create(new AwsCredentials() {
          @Override
          public String accessKeyId() {
            return "FAKE";
          }

          @Override
          public String secretAccessKey() {
            return "FAKE";
          }
        }))
        .build();
  }

  @Override
  public String handleRequest(SQSEvent input, Context context) {
    log.info("Running lambda request");
    this.sqsClient.sendMessage(SendMessageRequest.builder()
        .queueUrl(this.queueUrl)
        .messageBody("test")
        .build());
    return null;
  }
}
